name: Scan PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  test-iOS: 
    name: Test iOS
    runs-on: macos-latest
    steps:

    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'yarn'

    - name: Build dependency
      run: yarn

    - name: Pod install
      run: |
        cd example/ios
        pod install

    - name: Build and test iOS
      run: |
        cd example/ios
        xcodebuild test -workspace "${workspace}" -scheme "${scheme}" ${params} -destination "${destination}" -quiet | xcpretty --utf --color && exit ${PIPESTATUS[0]}
      env:
        workspace: 'AdyenExample.xcworkspace'
        params: '-derivedDataPath ./DerivedData -enableCodeCoverage YES'
        scheme: 'AdyenExample'
        destination: 'name=iPhone 14'

  test-Android: 
    name: Test Android
    runs-on: macos-latest
    steps:

    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'yarn'

    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
        cache: 'gradle'

    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-32

    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 32
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    - name: Checking AVD
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 32
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          adb kill-server
          adb start-server    
          ./gradlew connectedCheck

    - name: Build dependency
      run: yarn

    - name: Run Yarn
      run: |
        yarn android

    - name: Build and test Android
      run: |
        cd example/android    
        echo "TODO: Running Android tests"

  run-sonar:
    name: Collect Sonar reports
    needs: [test-Android, test-iOS]
    runs-on: macos-latest
    env:
      sonarToken: ${{ secrets.SONAR_TOKEN }}
    steps:

    - uses: actions/checkout@v3

    - name: Install Tools
      run: |
        brew install sonar-scanner
    
    - name: Run Sonar
      if: ${{ env.sonarToken != 0 }}
      run: |
        git fetch --unshallow --no-tags
        sonar-scanner -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
